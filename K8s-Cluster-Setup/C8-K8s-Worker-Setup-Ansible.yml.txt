---
 - name: Installing and Configuring Kubernetes Cluster For Worker Nodes
   hosts: k8snodes
   gather_facts: true

   tasks:
     - name: Prerequstites of Kubernetes Cluster for RedHat 8
       shell: |
               swapoff -av
               sed -i '/\bswap\b/ s/^/#/' /etc/fstab
               sed -i s/^SELINUX=enforcing/SELINUX=disabled/g /etc/selinux/config
               sed -i s/^SELINUX=permissive/SELINUX=disabled/g /etc/selinux/config
               systemctl disable firewalld
               systemctl stop firewalld
               touch /etc/modules-load.d/99-istio-modules.conf
               cat << EOF > /etc/modules-load.d/99-istio-modules.conf
               # These modules need to be loaded on boot so that Istio (as required by Kubeflow) runs properly.
               # See also: https://github.com/istio/istio/issues/23009

               br_netfilter
               nf_nat
               xt_REDIRECT
               xt_owner
               iptable_nat
               iptable_mangle
               iptable_filte
               EOF
               touch /etc/yum.repos.d/C7.repo
               touch /etc/yum.repos.d/K8s.repo
               mkdir /etc/docker
               touch /etc/docker/daemon.json
               cat << EOF > /etc/docker/daemon.json
               {
                "exec-opts": ["native.cgroupdriver=systemd"]
               }
               EOF
       when: ansible_facts['os_family'] == "RedHat"
       tags: "1"


     - name: Prerequstites of Kubernetes Cluster for Ubuntu
       shell: |
               swapoff -av
               sed -i '/\bswap\b/ s/^/#/' /etc/fstab
               ufw disable
               mkdir /etc/docker
               touch /etc/docker/daemon.json
               cat << EOF > /etc/docker/daemon.json
               {
                "exec-opts": ["native.cgroupdriver=systemd"]
               }
               EOF
       when: ansible_facts['os_family'] == "Debian"
       tags: "2"


     - name: Prequest completed rebooting Server and after continue task
       shell: reboot
       async: 1
       poll: 0
       tags: "3"
#       when: ansible_facts['os_family'] == "RedHat"


     - name: Waiting for server back online
       wait_for_connection:
         connect_timeout: 20
         sleep: 5
         delay: 5
         timeout: 300
       tags: "4"
#       when: ansible_facts['os_family'] == "RedHat"


     - name: Adding Docker & K8s repo for Ubuntu
       shell: |
               apt update -y
               apt install apt-transport-https ca-certificates curl software-properties-common -y
               curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
               add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu bionic stable"
               curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add
               apt-add-repository "deb http://apt.kubernetes.io/ kubernetes-xenial main"
               apt update -y
       when: ansible_facts['os_family'] == "Debian"
       tags: "5"

     - name: Adding docker repo for Redhat 8
       shell: |
               dnf config-manager --add-repo=https://download.docker.com/linux/centos/docker-ce.repo

     - name: Adding K8s repo for RedHat 8
       blockinfile:
         dest: /etc/yum.repos.d/K8s.repo
         block:
               |
                [kubernetes]
                name=Kubernetes
                baseurl=https://packages.cloud.google.com/yum/repos/kubernetes-el7-x86_64
                enabled=1
                gpgcheck=1
                repo_gpgcheck=1
                gpgkey=https://packages.cloud.google.com/yum/doc/yum-key.gpg
                       https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
       when: ansible_facts['os_family'] == "RedHat"
       tags: "7"

     - name: Installing kubernetes and docker packages for RedHat 8
       yum:
         name: "{{ item }}"
         state: latest
       with_items:
         - docker-ce
         - kubeadm
         - kubelet
       when: ansible_facts['os_family'] == "RedHat"
       tags: "8"

     - name: Installing Kubernetes and docker packages for Ubuntu
       apt:
         name: "{{ item }}"
         state: latest
       with_items:
         - docker-ce
         - kubeadm
         - kubelet
       when: ansible_facts['os_family'] == "Debian"
       tags: "9"

     - name: Kubernetes and docker service starting for RedHat 8
       service:
         name: "{{ item }}"
         state: started
         enabled: yes
       loop:
         - docker
         - kubelet
       when: ansible_facts['os_family'] == "RedHat"
       tags: "10"

     - name: Kubernetes and docker service starting for Ubuntu
       service:
         name: "{{ item }}"
         state: started
         enabled: yes
       loop:
         - docker
         - kubelet
       when: ansible_facts['os_family'] == "Debian"
       tags: "11"

     - name: Joining worker nodes to Kubernetes Master using API token
       shell: |
               echo 1 > /proc/sys/net/bridge/bridge-nf-call-iptables
               echo 1 > /proc/sys/net/bridge/bridge-nf-call-ip6tables
               sed -i 's/disabled_plugins/#disabled_plugins/g' /etc/containerd/config.toml
               systemctl restart containerd
               sh /tmp/joincluster.sh > /tmp/join.outs
       tags: "12"


 - hosts: k8smaster

   tasks:
     - name: Assinging Worker Node Roles
       shell: |
               kubectl label node k8sworker1 node-role.kubernetes.io/worker1=worker1
               kubectl label node k8sworker2 node-role.kubernetes.io/worker2=worker2
       tags: "13"

 - hosts: k8snodes

   tasks:

     - debug:
         msg: Kubernetes Worker Configured Successfully ensure node is connected to master
       tags: "14"
